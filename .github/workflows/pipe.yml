# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

# GitHub recommends pinning actions to a commit SHA.
# To get a newer version, you will need to update the SHA.
# You can also reference a tag or branch, but the action may change without warning.

name: ci/cd pipeline

on:
  push:
    branches: ['main']
  pull_request:
    branches:  none # ['main'] dont build and push an image when pull request

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }} # in this case will be samer955/book-example
  IMAGE_TAG: 1.0.${{ github.run_number }} # it will increase the tag number on every push starting from 1.0.0
  GITHUB_TOKEN: ${{ secrets.TOKEN }}
  GITHUB_ACTOR: ${{ github.actor }}
  VPN_CONFIG: ${{ secrets.CONFIG_VPN }}

jobs:

  build-push-docker:
  
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write
      
    steps:
    - uses: actions/checkout@v3  # Checkout the repository

    - name: Set up Go
      uses: actions/setup-go@v3
      with:
        go-version: 1.19.2

    - name: Build # Build the Go Code
      run: go build -v ./...

    - name: Test  # Test the go Code
      run: go test -v ./...
      
    - name: Connectint to remote server
      uses: appleboy/ssh-action@master
      with:
        host: 13.50.58.28
        username: admin
        key: ${{ secrets.SSH_PRIVATE_KEY }}
      
    - name: SonarQube analysis
      uses: sonarsource/sonarqube-scan-action@master
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
      # If you wish to fail your job when the Quality Gate is red, uncomment the
      # following lines. This would typically be used to fail a deployment.
      # - uses: sonarsource/sonarqube-quality-gate-action@master
      #   timeout-minutes: 5
      #   env:
      #     SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      
    - name: Set up Docker Buildx # setup for the docker container 
      uses: docker/setup-buildx-action@v2
      
    # Docker Login action for GitHub registry, see https://github.com/marketplace/actions/docker-login 
    - name: Login to GitHub Container Registry  
      uses: docker/login-action@v2
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
      

    # Extract metadata (tags, labels) for Docker
    # docker-metadata action from Docker, see https://github.com/marketplace/actions/docker-metadata-action
    - name: Extract Docker metadata
      id: meta
      uses: docker/metadata-action@v4
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

    # Build and push Docker Image with Buildx
    # build-push action from docker, see https://github.com/marketplace/actions/build-and-push-docker-images
    - name: Build and push Docker image
      uses: docker/build-push-action@v3
      with:
          context: .
          push: ${{ github.event_name != 'pull_request' }} # Dont push docker image on Pull Request
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}  # or ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

    - name: Run script to update manifest
      run: |
        bash update_app_version.sh "$IMAGE_TAG" "$GITHUB_TOKEN" "$GITHUB_ACTOR"
